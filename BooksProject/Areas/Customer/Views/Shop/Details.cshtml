@model BooksProject.Models.ShopppingCart
@{
    ViewData["Title"] = "Details";
}
<div class="container mt-5">
    <form method="post">
        <input type="hidden" asp-for="@Model.ProductId" />
        <div class="card shadow-lg rounded-lg">
            <!-- Card Header -->
            <div class="card-header bg-gradient-to-r from-blue-500 to-teal-400 text-white text-center py-4">
                <h1 class="product-title text-4xl font-semibold">@Model.Product.Title</h1>
                <p class="text-warning mt-2">by <strong>@Model.Product.Author.Title</strong></p>
                <div class="product-badges mt-3">

                    <span class="badge bg-success py-2 px-4 rounded-pill">@Model.Product.CoverType.Name</span>
                    <span class="badge bg-warning py-2 px-4 rounded-pill">@Model.Product.Category.Name</span>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-12 col-lg-7">
                        <div class="mb-4">
                            <h5 class="text-xl">ISBN: <span class="text-muted">@Model.Product.ISBN</span></h5>
                            <h5 class="text-2xl text-info font-semibold mt-3"><strong>Price: </strong>$@Model.Product.ListPrice.ToString("0.00")</h5>
                            <div class="d-flex justify-content-start mb-4">
                                <div class="p-3">
                                    <strong>1 - 49:</strong> <span class="text-muted">$@Model.Product.Price.ToString("0.00")</span>
                                </div>
                                <div class="p-3">
                                    <strong>50 - 99:</strong> <span class="text-muted">$@Model.Product.Price50.ToString("0.00")</span>
                                </div>
                                <div class="p-3">
                                    <strong>100+:</strong> <span class="text-muted">$@Model.Product.Price100.ToString("0.00")</span>
                                </div>
                            </div>
                            <p class="text-secondary">@Html.Raw(Model.Product.Description)</p>
                        </div>

@*                        <div class="mb-4">
                            <div class="row">
                                <div class="col-3 text-primary"><h4>Quantity</h4></div>
                                <div class="col-9">
                                    <div class="input-group">
                                        <button type="button" class="btn btn-outline-info" id="decrementBtn">-</button>
                                        <input id="quantityInput" class="form-control text-center" value="1" min="1" max="1000" type="number" />
                                        <button type="button" class="btn btn-outline-info" id="incrementBtn">+</button>
                                    </div>
                                </div>
                            </div>
                        </div>
*@
                    </div>

                    <div class="col-12 col-lg-5">
                        <div id="productImageCarousel" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <img src="@Model.Product.ImageFeatured" class="d-block w-100 rounded img-fluid mb-3" alt="Product Featured">
                                </div>
                                <div class="carousel-item">
                                    <img src="@Model.Product.ImageFirst" class="d-block w-100 rounded img-fluid mb-3" alt="Product First">
                                </div>
                                <div class="carousel-item">
                                    <img src="@Model.Product.ImageSecond" class="d-block w-100 rounded img-fluid mb-3" alt="Product Second">
                                </div>
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#productImageCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#productImageCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer text-center py-4">
                <div class="row">
                    <div class="col-12 col-md-6 pb-2">
                        <a asp-action="Index" class="btn btn-lg btn-outline-primary form-control">Back to List</a>
                    </div>
                    <div class="col-12 col-md-6 pb-2">
                        <button type="submit" class="btn btn-lg btn-primary form-control">Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@*<script>
    // Update price dynamically based on quantity
    const pricePerUnit = @Model.Product.Price;
    const price50 = @Model.Product.Price50;
    const price100 = @Model.Product.Price100;

    function updatePrice(quantity) {
        let finalPrice = pricePerUnit; // Default price
        if (quantity >= 50 && quantity < 100) {
            finalPrice = price50;
        } else if (quantity >= 100) {
            finalPrice = price100;
        }
        document.getElementById("finalPrice").textContent = finalPrice.toFixed(2);
    }

    document.getElementById("incrementBtn").addEventListener("click", function () {
        let quantityInput = document.getElementById("quantityInput");
        let quantity = parseInt(quantityInput.value);
        if (quantity < 1000) {
            quantityInput.value = quantity + 1;
            updatePrice(quantity + 1);
        }
    });

    document.getElementById("decrementBtn").addEventListener("click", function () {
        let quantityInput = document.getElementById("quantityInput");
        let quantity = parseInt(quantityInput.value);
        if (quantity > 1) {
            quantityInput.value = quantity - 1;
            updatePrice(quantity - 1);
        }
    });
</script>*@

<style>
    /* Custom Styling */
    .product-title {
        font-size: 2.5rem;
        font-weight: bold;
    }

    .product-badges {
        display: flex;
        gap: 10px;
        justify-content: center;
    }

        .product-badges .badge {
            font-size: 1rem;
            padding: 10px;
            border-radius: 25px;
        }

    .carousel-item img {
        height: 400px;
        object-fit: contain;
    }

    .card-footer button, .card-footer a {
        height: 50px;
    }

    .btn {
        transition: opacity 0.3s ease;
    }

        .btn:hover {
            opacity: 0.8;
        }

    .input-group button {
        cursor: pointer;
    }

    /* Header Customization */
    .card-header {
        background: linear-gradient(to right, #0066cc, #00b3b3);
        color: white;
        text-align: center;
    }

    .input-group {
        width: 100%;
        margin-top: 10px;
    }

    .card {
        border-radius: 15px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    

    .p-3 {
        padding: 1rem;
    }
</style>